var N=null,E="",T="t",U="u",searchIndex={};
var R=["xmc4_hal","constrain","enable","xmc4_hal::can","result","xmc4_hal::ccu40","try_from","try_into","borrow","borrow_mut","xmc4_hal::ccu80","type_id","xmc4_hal::dac","xmc4_hal::dlr","typeid","xmc4_hal::eru","xmc4_hal::fce","xmc4_hal::flash","xmc4_hal::gpdma","xmc4_hal::hrpwm","xmc4_hal::ledts","xmc4_hal::pba","xmc4_hal::pmu","xmc4_hal::port","xmc4_hal::posif","xmc4_hal::ppb","xmc4_hal::pref","xmc4_hal::rtc","xmc4_hal::scu","xmc4_hal::usb","xmc4_hal::usic","xmc4_hal::vadc","xmc4_hal::wdt","formatter","debugmode","servicerequest","ordering","startmode","triggeredge","Ccu40Ext","Ccu80Ext","FlashExt","GpdmaExt","HrpwmExt","LedtsExt","PosifExt","ServiceRequest","StartMode","TriggerEdge","TriggerInputSelect","GateInputSelect","GateMode","DebugMode","EventMode"];

searchIndex["xmc4_hal"]={"doc":E,"i":[[0,"macros",R[0],E,N,N],[0,"can",E,E,N,N],[3,"Can",R[3],E,N,N],[8,"CanExt",E,E,N,N],[10,R[1],E,E,0,[[],["can"]]],[0,"ccu40",R[0],E,N,N],[3,"Ccu40",R[5],E,N,N],[8,R[39],E,E,N,N],[10,R[1],E,E,1,[[],["ccu40"]]],[0,"ccu80",R[0],E,N,N],[3,"Ccu80",R[10],E,N,N],[8,R[40],E,E,N,N],[10,R[1],E,E,2,[[],["ccu80"]]],[0,"dac",R[0],E,N,N],[3,"Dac",R[12],E,N,N],[8,"DacExt",E,E,N,N],[10,R[1],E,E,3,[[],["dac"]]],[0,"dlr",R[0],E,N,N],[3,"Dlr",R[13],E,N,N],[8,"DlrExt",E,E,N,N],[10,R[1],E,E,4,[[],["dlr"]]],[0,"eru",R[0],E,N,N],[3,"Eru",R[15],E,N,N],[8,"EruExt",E,E,N,N],[10,R[1],E,E,5,[[],["eru"]]],[0,"fce",R[0],E,N,N],[3,"Fce",R[16],E,N,N],[8,"FceExt",E,E,N,N],[10,R[1],E,E,6,[[],["fce"]]],[0,"flash",R[0],E,N,N],[3,"Flash",R[17],E,N,N],[8,R[41],E,E,N,N],[10,R[1],E,E,7,[[],["flash"]]],[0,"gpdma",R[0],E,N,N],[3,"Gpdma",R[18],E,N,N],[8,R[42],E,E,N,N],[10,R[1],E,E,8,[[],["gpdma"]]],[0,"hrpwm",R[0],E,N,N],[3,"Hrpwm",R[19],E,N,N],[8,R[43],E,E,N,N],[10,R[1],E,E,9,[[],["hrpwm"]]],[0,"ledts",R[0],E,N,N],[3,"Ledts",R[20],E,N,N],[8,R[44],E,E,N,N],[10,R[1],E,E,10,[[],["ledts"]]],[0,"pba",R[0],E,N,N],[3,"Pba",R[21],E,N,N],[8,"PbaExt",E,E,N,N],[10,R[1],E,E,11,[[],["pba"]]],[0,"pmu",R[0],E,N,N],[3,"Pmu",R[22],E,N,N],[8,"PmuExt",E,E,N,N],[10,R[1],E,E,12,[[],["pmu"]]],[0,"port",R[0],E,N,N],[3,"Port",R[23],E,N,N],[8,"PortExt",E,E,N,N],[10,R[1],E,E,13,[[],["port"]]],[0,"posif",R[0],E,N,N],[3,"Posif",R[24],E,N,N],[8,R[45],E,E,N,N],[10,R[1],E,E,14,[[],["posif"]]],[0,"ppb",R[0],E,N,N],[3,"Ppb",R[25],E,N,N],[8,"PpbExt",E,E,N,N],[10,R[1],E,E,15,[[],["ppb"]]],[0,"pref",R[0],E,N,N],[3,"Pref",R[26],E,N,N],[8,"PrefExt",E,E,N,N],[10,R[1],E,E,16,[[],["pref"]]],[0,"rtc",R[0],E,N,N],[3,"Time",R[27],"Representation of RTC time objects",N,N],[12,"second",E,"Number of seconds in RTC time",17,N],[12,"minute",E,"Number of minutes in RTC time",17,N],[12,"hour",E,"Number of hours in RTC time",17,N],[12,"day",E,"Number of days in RTC time",17,N],[12,"weekday",E,"Day of the week in RTC time",17,N],[12,"month",E,"Month of the year in RTC time",17,N],[12,"year",E,"Year in RTC time",17,N],[3,"Rtc",E,E,N,N],[4,"Event",E,E,N,N],[13,"Seconds",E,E,18,N],[13,"Minutes",E,E,18,N],[13,"Hours",E,E,18,N],[13,"Days",E,E,18,N],[13,"Months",E,E,18,N],[13,"Years",E,E,18,N],[4,"Month",E,"Current month in RTC time",N,N],[13,"January",E,E,19,N],[13,"February",E,E,19,N],[13,"March",E,E,19,N],[13,"April",E,E,19,N],[13,"May",E,E,19,N],[13,"June",E,E,19,N],[13,"July",E,E,19,N],[13,"August",E,E,19,N],[13,"September",E,E,19,N],[13,"October",E,E,19,N],[13,"November",E,E,19,N],[13,"December",E,E,19,N],[4,"Weekday",E,"Current weekday in RTC time",N,N],[13,"Sunday",E,E,20,N],[13,"Monday",E,E,20,N],[13,"Tuesday",E,E,20,N],[13,"Wednesday",E,E,20,N],[13,"Thursday",E,E,20,N],[13,"Friday",E,E,20,N],[13,"Saturday",E,E,20,N],[17,"MAX_SECONDS",E,"Maximum number of seconds for the RTC time",N,N],[17,"MAX_MINUTES",E,"Maximum number of minutes for the RTC time",N,N],[17,"MAX_HOURS",E,"Maximum number of hours for the RTC time",N,N],[17,"MAX_DAYS",E,"Maximum number of days for the RTC time",N,N],[17,"MAX_YEAR",E,"Maximum number of years for the RTC time",N,N],[17,"YEAR_OFFSET",E,"Offset for year in standard time representation",N,N],[8,"RtcExt",E,E,N,N],[10,R[1],E,E,21,[[],["rtc"]]],[11,"wait_for_mirrsts",E,E,22,[[["self"]]]],[11,"start",E,E,22,[[["self"]]]],[11,"stop",E,E,22,[[["self"]]]],[11,"is_running",E,E,22,[[["self"]],["bool"]]],[11,"set_prescaler",E,E,22,[[["u16"],["self"]]]],[11,"set_time",E,E,22,[[["self"],["time"]]]],[11,"get_time",E,E,22,[[["self"]],["time"]]],[11,"set_time_std_format",E,E,22,[[["self"],["time"]]]],[11,"get_time_std_format",E,E,22,[[["self"]],["time"]]],[11,"set_alarm",E,E,22,[[["self"],["time"]]]],[11,"get_alarm",E,E,22,[[["self"]],["time"]]],[11,"set_alarm_std_format",E,E,22,[[["self"],["time"]]]],[11,"get_alarm_std_format",E,E,22,[[["self"]],["time"]]],[11,"get_event_status",E,E,22,[[["self"]],["u32"]]],[11,R[2],E,E,22,[[["self"]]]],[11,"is_enabled",E,E,22,[[["self"]],["bool"]]],[11,"enable_event",E,E,22,[[["self"]]]],[11,"disable_event",E,E,22,[[["self"]]]],[11,"clear_event",E,E,22,[[["self"]]]],[11,"enable_hibernation_wake_up",E,E,22,[[["self"]]]],[11,"disable_hibernation_wake_up",E,E,22,[[["self"]]]],[0,"scu",R[0],E,N,N],[3,"Scu",R[28],E,N,N],[8,"ScuExt",E,E,N,N],[10,R[1],E,E,23,[[],["scu"]]],[11,"enable_hibernate_domain",E,E,24,[[["self"]]]],[11,"is_hibernate_domain_enabled",E,E,24,[[["self"]],["bool"]]],[0,"usb",R[0],E,N,N],[3,"Usb",R[29],E,N,N],[8,"UsbExt",E,E,N,N],[10,R[1],E,E,25,[[],["usb"]]],[0,"usic",R[0],E,N,N],[3,"Usic",R[30],E,N,N],[8,"UsicExt",E,E,N,N],[10,R[1],E,E,26,[[],["usic"]]],[0,"vadc",R[0],E,N,N],[3,"Vadc",R[31],E,N,N],[4,R[46],E,"Types of service requests. Each group can raise up to 4…",N,N],[13,"GroupSR0",E,E,27,N],[13,"GroupSR1",E,E,27,N],[13,"GroupSR2",E,E,27,N],[13,"GroupSR3",E,E,27,N],[13,"SharedSR0",E,E,27,N],[13,"SharedSR1",E,E,27,N],[13,"SharedSR2",E,E,27,N],[13,"SharedSR3",E,E,27,N],[4,R[47],E,"Operational mode of a channel when a conversion is…",N,N],[13,"WithoutInterruption",E,"Conversion completes without interruption",28,N],[13,"InterruptionResume",E,"Conversion can be interrupted and then resumed.",28,N],[13,"InterruptionStop",E,"Conversion can be interrupted and not resume.",28,N],[4,R[48],E,"Types of edges that can start conversion based on an…",N,N],[13,"None",E,"No external triggers",29,N],[13,"Falling",E,"Conversion starts on a falling edge of external source",29,N],[13,"Rising",E,"Conversion starts on rising edge of external source",29,N],[13,"Any",E,"Falling and rising edge of external source can start…",29,N],[4,R[49],E,"Different possibilities that can act as an external input…",N,N],[13,"A",E,E,30,N],[13,"B",E,E,30,N],[13,"C",E,E,30,N],[13,"D",E,E,30,N],[13,"E",E,E,30,N],[13,"F",E,E,30,N],[13,"G",E,E,30,N],[13,"H",E,E,30,N],[13,"I",E,E,30,N],[13,"J",E,E,30,N],[13,"K",E,E,30,N],[13,"L",E,E,30,N],[13,"M",E,E,30,N],[13,"N",E,E,30,N],[13,"O",E,E,30,N],[13,"P",E,E,30,N],[4,R[50],E,"Different gating input possibilities that can gate…",N,N],[13,"A",E,E,31,N],[13,"B",E,E,31,N],[13,"C",E,E,31,N],[13,"D",E,E,31,N],[13,"E",E,E,31,N],[13,"F",E,E,31,N],[13,"G",E,E,31,N],[13,"H",E,E,31,N],[13,"I",E,E,31,N],[13,"J",E,E,31,N],[13,"K",E,E,31,N],[13,"L",E,E,31,N],[13,"M",E,E,31,N],[13,"N",E,E,31,N],[13,"O",E,E,31,N],[13,"P",E,E,31,N],[4,R[51],E,"Conditions for gating conversion requests.",N,N],[13,"Block",E,"No external triggers are passed",32,N],[13,"Ignore",E,"All external triggers are passed",32,N],[13,"ActiveHigh",E,"Gate signals that are active high are passed",32,N],[13,"ActiveLow",E,"Gate signals that are active low are passed",32,N],[8,"VadcExt",E,E,N,N],[10,R[1],E,E,33,[[],["vadc"]]],[11,"enable_module_clock",E,"Enable the clock for this peripheral.",34,[[]]],[11,"disable_module_clock",E,"Disable the clock for this peripheral.",34,[[]]],[11,"enable_sleep_mode",E,"Allow peripheral to go to sleep if a request is received.",34,[[]]],[11,"disable_sleep_mode",E,"Prevent peripheral to go to sleep if a request is received.",34,[[]]],[11,"clock_init",E,"Initialize clock to the analog converter",34,[[]]],[11,"disable_startup_calibration",E,"Disable calibration from channels occurring during startup",34,[[]]],[0,"wdt",R[0],E,N,N],[3,"Wdt",R[32],E,N,N],[12,"wdt",E,E,35,N],[4,"Mode",E,E,N,N],[13,"Timeout",E,E,36,N],[13,"Prewarning",E,E,36,N],[4,R[52],E,E,N,N],[13,"Stop",E,E,37,N],[13,"Run",E,E,37,N],[4,R[53],E,E,N,N],[13,"Interrupt",E,E,38,N],[13,"NmiRequest",E,E,38,N],[4,"Status",E,E,N,N],[13,"Success",E,E,39,N],[13,"Failure",E,E,39,N],[17,"ALARM_CLEAR",E,E,N,N],[17,"SERVICE_KEY",E,E,N,N],[11,"new",E,E,35,[[],["wdt"]]],[11,R[2],E,E,35,[[["self"]]]],[11,"disable",E,E,35,[[["self"]]]],[11,"set_window_bounds",E,E,35,[[["u32"]]]],[11,"start",E,E,35,[[]]],[11,"stop",E,E,35,[[]]],[11,"set_mode",E,E,35,[[["mode"]]]],[11,"set_service_pulse_width",E,E,35,[[["u8"]]]],[11,"set_debug_mode",E,E,35,[[[R[34]]]]],[11,"get_counter",E,E,35,[[],["u32"]]],[11,"service",E,E,35,[[]]],[11,"clear_alarm",E,E,35,[[]]],[11,"from",R[3],E,40,[[[T]],[T]]],[11,R[6],E,E,40,[[[U]],[R[4]]]],[11,"into",E,E,40,[[],[U]]],[11,R[7],E,E,40,[[],[R[4]]]],[11,R[8],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[T]]],[11,R[11],E,E,40,[[["self"]],[R[14]]]],[11,"from",R[5],E,41,[[[T]],[T]]],[11,R[6],E,E,41,[[[U]],[R[4]]]],[11,"into",E,E,41,[[],[U]]],[11,R[7],E,E,41,[[],[R[4]]]],[11,R[8],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[T]]],[11,R[11],E,E,41,[[["self"]],[R[14]]]],[11,"from",R[10],E,42,[[[T]],[T]]],[11,R[6],E,E,42,[[[U]],[R[4]]]],[11,"into",E,E,42,[[],[U]]],[11,R[7],E,E,42,[[],[R[4]]]],[11,R[8],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[T]]],[11,R[11],E,E,42,[[["self"]],[R[14]]]],[11,"from",R[12],E,43,[[[T]],[T]]],[11,R[6],E,E,43,[[[U]],[R[4]]]],[11,"into",E,E,43,[[],[U]]],[11,R[7],E,E,43,[[],[R[4]]]],[11,R[8],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[T]]],[11,R[11],E,E,43,[[["self"]],[R[14]]]],[11,"from",R[13],E,44,[[[T]],[T]]],[11,R[6],E,E,44,[[[U]],[R[4]]]],[11,"into",E,E,44,[[],[U]]],[11,R[7],E,E,44,[[],[R[4]]]],[11,R[8],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[T]]],[11,R[11],E,E,44,[[["self"]],[R[14]]]],[11,"from",R[15],E,45,[[[T]],[T]]],[11,R[6],E,E,45,[[[U]],[R[4]]]],[11,"into",E,E,45,[[],[U]]],[11,R[7],E,E,45,[[],[R[4]]]],[11,R[8],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[T]]],[11,R[11],E,E,45,[[["self"]],[R[14]]]],[11,"from",R[16],E,46,[[[T]],[T]]],[11,R[6],E,E,46,[[[U]],[R[4]]]],[11,"into",E,E,46,[[],[U]]],[11,R[7],E,E,46,[[],[R[4]]]],[11,R[8],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[T]]],[11,R[11],E,E,46,[[["self"]],[R[14]]]],[11,"from",R[17],E,47,[[[T]],[T]]],[11,R[6],E,E,47,[[[U]],[R[4]]]],[11,"into",E,E,47,[[],[U]]],[11,R[7],E,E,47,[[],[R[4]]]],[11,R[8],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[T]]],[11,R[11],E,E,47,[[["self"]],[R[14]]]],[11,"from",R[18],E,48,[[[T]],[T]]],[11,R[6],E,E,48,[[[U]],[R[4]]]],[11,"into",E,E,48,[[],[U]]],[11,R[7],E,E,48,[[],[R[4]]]],[11,R[8],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[T]]],[11,R[11],E,E,48,[[["self"]],[R[14]]]],[11,"from",R[19],E,49,[[[T]],[T]]],[11,R[6],E,E,49,[[[U]],[R[4]]]],[11,"into",E,E,49,[[],[U]]],[11,R[7],E,E,49,[[],[R[4]]]],[11,R[8],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[T]]],[11,R[11],E,E,49,[[["self"]],[R[14]]]],[11,"from",R[20],E,50,[[[T]],[T]]],[11,R[6],E,E,50,[[[U]],[R[4]]]],[11,"into",E,E,50,[[],[U]]],[11,R[7],E,E,50,[[],[R[4]]]],[11,R[8],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[T]]],[11,R[11],E,E,50,[[["self"]],[R[14]]]],[11,"from",R[21],E,51,[[[T]],[T]]],[11,R[6],E,E,51,[[[U]],[R[4]]]],[11,"into",E,E,51,[[],[U]]],[11,R[7],E,E,51,[[],[R[4]]]],[11,R[8],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[T]]],[11,R[11],E,E,51,[[["self"]],[R[14]]]],[11,"from",R[22],E,52,[[[T]],[T]]],[11,R[6],E,E,52,[[[U]],[R[4]]]],[11,"into",E,E,52,[[],[U]]],[11,R[7],E,E,52,[[],[R[4]]]],[11,R[8],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[T]]],[11,R[11],E,E,52,[[["self"]],[R[14]]]],[11,"from",R[23],E,53,[[[T]],[T]]],[11,R[6],E,E,53,[[[U]],[R[4]]]],[11,"into",E,E,53,[[],[U]]],[11,R[7],E,E,53,[[],[R[4]]]],[11,R[8],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[T]]],[11,R[11],E,E,53,[[["self"]],[R[14]]]],[11,"from",R[24],E,54,[[[T]],[T]]],[11,R[6],E,E,54,[[[U]],[R[4]]]],[11,"into",E,E,54,[[],[U]]],[11,R[7],E,E,54,[[],[R[4]]]],[11,R[8],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[T]]],[11,R[11],E,E,54,[[["self"]],[R[14]]]],[11,"from",R[25],E,55,[[[T]],[T]]],[11,R[6],E,E,55,[[[U]],[R[4]]]],[11,"into",E,E,55,[[],[U]]],[11,R[7],E,E,55,[[],[R[4]]]],[11,R[8],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[T]]],[11,R[11],E,E,55,[[["self"]],[R[14]]]],[11,"from",R[26],E,56,[[[T]],[T]]],[11,R[6],E,E,56,[[[U]],[R[4]]]],[11,"into",E,E,56,[[],[U]]],[11,R[7],E,E,56,[[],[R[4]]]],[11,R[8],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[T]]],[11,R[11],E,E,56,[[["self"]],[R[14]]]],[11,"from",R[27],E,17,[[[T]],[T]]],[11,R[6],E,E,17,[[[U]],[R[4]]]],[11,"into",E,E,17,[[],[U]]],[11,R[7],E,E,17,[[],[R[4]]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[T]]],[11,R[11],E,E,17,[[["self"]],[R[14]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[6],E,E,22,[[[U]],[R[4]]]],[11,"into",E,E,22,[[],[U]]],[11,R[7],E,E,22,[[],[R[4]]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[T]]],[11,R[11],E,E,22,[[["self"]],[R[14]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[6],E,E,18,[[[U]],[R[4]]]],[11,"into",E,E,18,[[],[U]]],[11,R[7],E,E,18,[[],[R[4]]]],[11,R[8],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[T]]],[11,R[11],E,E,18,[[["self"]],[R[14]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[6],E,E,19,[[[U]],[R[4]]]],[11,"into",E,E,19,[[],[U]]],[11,R[7],E,E,19,[[],[R[4]]]],[11,R[8],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[T]]],[11,R[11],E,E,19,[[["self"]],[R[14]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[6],E,E,20,[[[U]],[R[4]]]],[11,"into",E,E,20,[[],[U]]],[11,R[7],E,E,20,[[],[R[4]]]],[11,R[8],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[T]]],[11,R[11],E,E,20,[[["self"]],[R[14]]]],[11,"from",R[28],E,24,[[[T]],[T]]],[11,R[6],E,E,24,[[[U]],[R[4]]]],[11,"into",E,E,24,[[],[U]]],[11,R[7],E,E,24,[[],[R[4]]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[T]]],[11,R[11],E,E,24,[[["self"]],[R[14]]]],[11,"from",R[29],E,57,[[[T]],[T]]],[11,R[6],E,E,57,[[[U]],[R[4]]]],[11,"into",E,E,57,[[],[U]]],[11,R[7],E,E,57,[[],[R[4]]]],[11,R[8],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[T]]],[11,R[11],E,E,57,[[["self"]],[R[14]]]],[11,"from",R[30],E,58,[[[T]],[T]]],[11,R[6],E,E,58,[[[U]],[R[4]]]],[11,"into",E,E,58,[[],[U]]],[11,R[7],E,E,58,[[],[R[4]]]],[11,R[8],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[T]]],[11,R[11],E,E,58,[[["self"]],[R[14]]]],[11,"from",R[31],E,34,[[[T]],[T]]],[11,R[6],E,E,34,[[[U]],[R[4]]]],[11,"into",E,E,34,[[],[U]]],[11,R[7],E,E,34,[[],[R[4]]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[T]]],[11,R[11],E,E,34,[[["self"]],[R[14]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[6],E,E,27,[[[U]],[R[4]]]],[11,"into",E,E,27,[[],[U]]],[11,R[7],E,E,27,[[],[R[4]]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[T]]],[11,R[11],E,E,27,[[["self"]],[R[14]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[6],E,E,28,[[[U]],[R[4]]]],[11,"into",E,E,28,[[],[U]]],[11,R[7],E,E,28,[[],[R[4]]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[T]]],[11,R[11],E,E,28,[[["self"]],[R[14]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[6],E,E,29,[[[U]],[R[4]]]],[11,"into",E,E,29,[[],[U]]],[11,R[7],E,E,29,[[],[R[4]]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[T]]],[11,R[11],E,E,29,[[["self"]],[R[14]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[6],E,E,30,[[[U]],[R[4]]]],[11,"into",E,E,30,[[],[U]]],[11,R[7],E,E,30,[[],[R[4]]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[T]]],[11,R[11],E,E,30,[[["self"]],[R[14]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[6],E,E,31,[[[U]],[R[4]]]],[11,"into",E,E,31,[[],[U]]],[11,R[7],E,E,31,[[],[R[4]]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[T]]],[11,R[11],E,E,31,[[["self"]],[R[14]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[6],E,E,32,[[[U]],[R[4]]]],[11,"into",E,E,32,[[],[U]]],[11,R[7],E,E,32,[[],[R[4]]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[T]]],[11,R[11],E,E,32,[[["self"]],[R[14]]]],[11,"from",R[32],E,35,[[[T]],[T]]],[11,R[6],E,E,35,[[[U]],[R[4]]]],[11,"into",E,E,35,[[],[U]]],[11,R[7],E,E,35,[[],[R[4]]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[T]]],[11,R[11],E,E,35,[[["self"]],[R[14]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[6],E,E,36,[[[U]],[R[4]]]],[11,"into",E,E,36,[[],[U]]],[11,R[7],E,E,36,[[],[R[4]]]],[11,R[8],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[T]]],[11,R[11],E,E,36,[[["self"]],[R[14]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[6],E,E,37,[[[U]],[R[4]]]],[11,"into",E,E,37,[[],[U]]],[11,R[7],E,E,37,[[],[R[4]]]],[11,R[8],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[T]]],[11,R[11],E,E,37,[[["self"]],[R[14]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[6],E,E,38,[[[U]],[R[4]]]],[11,"into",E,E,38,[[],[U]]],[11,R[7],E,E,38,[[],[R[4]]]],[11,R[8],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[T]]],[11,R[11],E,E,38,[[["self"]],[R[14]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[6],E,E,39,[[[U]],[R[4]]]],[11,"into",E,E,39,[[],[U]]],[11,R[7],E,E,39,[[],[R[4]]]],[11,R[8],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[T]]],[11,R[11],E,E,39,[[["self"]],[R[14]]]],[11,R[1],R[3],E,40,[[],["can"]]],[11,R[1],R[5],E,41,[[],["ccu40"]]],[11,R[1],R[10],E,42,[[],["ccu80"]]],[11,R[1],R[12],E,43,[[],["dac"]]],[11,R[1],R[13],E,44,[[],["dlr"]]],[11,R[1],R[15],E,45,[[],["eru"]]],[11,R[1],R[16],E,46,[[],["fce"]]],[11,R[1],R[17],E,47,[[],["flash"]]],[11,R[1],R[18],E,48,[[],["gpdma"]]],[11,R[1],R[19],E,49,[[],["hrpwm"]]],[11,R[1],R[20],E,50,[[],["ledts"]]],[11,R[1],R[21],E,51,[[],["pba"]]],[11,R[1],R[22],E,52,[[],["pmu"]]],[11,R[1],R[23],E,53,[[],["port"]]],[11,R[1],R[24],E,54,[[],["posif"]]],[11,R[1],R[25],E,55,[[],["ppb"]]],[11,R[1],R[26],E,56,[[],["pref"]]],[11,R[1],R[27],E,22,[[],["rtc"]]],[11,R[1],R[28],E,24,[[],["scu"]]],[11,R[1],R[29],E,57,[[],["usb"]]],[11,R[1],R[30],E,58,[[],["usic"]]],[11,R[1],R[31],E,34,[[],["vadc"]]],[11,"from",R[27],E,18,[[["u8"]],["self"]]],[11,"from",E,E,19,[[["u8"]],["self"]]],[11,"from",E,E,20,[[["u8"]],["self"]]],[11,"from",R[31],E,27,[[["u8"]],["self"]]],[11,"from",E,E,28,[[["u8"]],["self"]]],[11,"from",E,E,29,[[["u8"]],["self"]]],[11,"from",E,E,30,[[["u8"]],["self"]]],[11,"from",E,E,31,[[["u8"]],["self"]]],[11,"from",E,E,32,[[["u8"]],["self"]]],[11,"from",R[32],E,36,[[["u32"]],["self"]]],[11,"fmt",R[31],E,27,[[[R[33]],["self"]],[R[4]]]],[11,"fmt",E,E,28,[[[R[33]],["self"]],[R[4]]]],[11,"fmt",E,E,29,[[[R[33]],["self"]],[R[4]]]],[11,"fmt",E,E,30,[[[R[33]],["self"]],[R[4]]]],[11,"fmt",E,E,31,[[[R[33]],["self"]],[R[4]]]],[11,"fmt",E,E,32,[[[R[33]],["self"]],[R[4]]]],[11,"eq",E,E,27,[[[R[35]],["self"]],["bool"]]],[11,"eq",E,E,28,[[["self"],[R[37]]],["bool"]]],[11,"eq",E,E,29,[[[R[38]],["self"]],["bool"]]],[11,"eq",R[32],E,36,[[["mode"],["self"]],["bool"]]],[11,"eq",E,E,37,[[[R[34]],["self"]],["bool"]]],[11,"partial_cmp",R[31],E,27,[[[R[35]],["self"]],[[R[36]],["option",[R[36]]]]]],[11,"clone",E,E,27,[[["self"]],[R[35]]]],[11,"clone",E,E,28,[[["self"]],[R[37]]]],[11,"clone",E,E,29,[[["self"]],[R[38]]]],[11,"clone",E,E,30,[[["self"]],["triggerinputselect"]]],[11,"clone",E,E,31,[[["self"]],["gateinputselect"]]],[11,"clone",E,E,32,[[["self"]],["gatemode"]]]],"p":[[8,"CanExt"],[8,R[39]],[8,R[40]],[8,"DacExt"],[8,"DlrExt"],[8,"EruExt"],[8,"FceExt"],[8,R[41]],[8,R[42]],[8,R[43]],[8,R[44]],[8,"PbaExt"],[8,"PmuExt"],[8,"PortExt"],[8,R[45]],[8,"PpbExt"],[8,"PrefExt"],[3,"Time"],[4,"Event"],[4,"Month"],[4,"Weekday"],[8,"RtcExt"],[3,"Rtc"],[8,"ScuExt"],[3,"Scu"],[8,"UsbExt"],[8,"UsicExt"],[4,R[46]],[4,R[47]],[4,R[48]],[4,R[49]],[4,R[50]],[4,R[51]],[8,"VadcExt"],[3,"Vadc"],[3,"Wdt"],[4,"Mode"],[4,R[52]],[4,R[53]],[4,"Status"],[3,"Can"],[3,"Ccu40"],[3,"Ccu80"],[3,"Dac"],[3,"Dlr"],[3,"Eru"],[3,"Fce"],[3,"Flash"],[3,"Gpdma"],[3,"Hrpwm"],[3,"Ledts"],[3,"Pba"],[3,"Pmu"],[3,"Port"],[3,"Posif"],[3,"Ppb"],[3,"Pref"],[3,"Usb"],[3,"Usic"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);